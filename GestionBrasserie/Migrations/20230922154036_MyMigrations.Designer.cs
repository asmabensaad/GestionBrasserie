// <auto-generated />
using System;
using GestionBrasserie.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionBrasserie.Migrations
{
    [DbContext(typeof(GestionBrasserieDbContext))]
    [Migration("20230922154036_MyMigrations")]
    partial class MyMigrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GestionBrasserie.Models.Biere", b =>
                {
                    b.Property<int>("BiereId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BiereId"), 1L, 1);

                    b.Property<int>("BrasserieId")
                        .HasColumnType("int");

                    b.Property<double>("TeneurEnAlcool")
                        .HasColumnType("float");

                    b.Property<string>("nomBiere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("prixBiere")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BiereId");

                    b.HasIndex("BrasserieId");

                    b.ToTable("Bieres");
                });

            modelBuilder.Entity("GestionBrasserie.Models.Brasserie", b =>
                {
                    b.Property<int>("Idbrasserie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idbrasserie"), 1L, 1);

                    b.Property<string>("nomBr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Idbrasserie");

                    b.ToTable("Brasseries");
                });

            modelBuilder.Entity("GestionBrasserie.Models.Grossiste", b =>
                {
                    b.Property<int>("IdGr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGr"), 1L, 1);

                    b.Property<string>("nomGR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdGr");

                    b.ToTable("Grossistes");
                });

            modelBuilder.Entity("GestionBrasserie.Models.StockGrossiste", b =>
                {
                    b.Property<int>("StockId")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("IdGr")
                        .HasColumnType("int");

                    b.Property<int>("BiereId")
                        .HasColumnType("int");

                    b.Property<int>("QuantiteStock")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("StockId", "IdGr");

                    b.HasIndex("BiereId");

                    b.HasIndex("IdGr");

                    b.ToTable("StockGrossistes");
                });

            modelBuilder.Entity("GestionBrasserie.Models.Vente", b =>
                {
                    b.Property<int>("Idvente")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("IdGr")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("BiereId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("DateVente")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontantTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Prixunitaire")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Qtevendu")
                        .HasColumnType("int");

                    b.HasKey("Idvente", "IdGr", "BiereId");

                    b.HasIndex("BiereId");

                    b.HasIndex("IdGr");

                    b.ToTable("Ventes");
                });

            modelBuilder.Entity("GestionBrasserie.Models.Biere", b =>
                {
                    b.HasOne("GestionBrasserie.Models.Brasserie", null)
                        .WithMany("Bieres")
                        .HasForeignKey("BrasserieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestionBrasserie.Models.StockGrossiste", b =>
                {
                    b.HasOne("GestionBrasserie.Models.Biere", "Biere")
                        .WithMany()
                        .HasForeignKey("BiereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionBrasserie.Models.Grossiste", "Grossiste")
                        .WithMany("stocks")
                        .HasForeignKey("IdGr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Biere");

                    b.Navigation("Grossiste");
                });

            modelBuilder.Entity("GestionBrasserie.Models.Vente", b =>
                {
                    b.HasOne("GestionBrasserie.Models.Biere", "Biere")
                        .WithMany()
                        .HasForeignKey("BiereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionBrasserie.Models.Grossiste", "Grossiste")
                        .WithMany()
                        .HasForeignKey("IdGr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Biere");

                    b.Navigation("Grossiste");
                });

            modelBuilder.Entity("GestionBrasserie.Models.Brasserie", b =>
                {
                    b.Navigation("Bieres");
                });

            modelBuilder.Entity("GestionBrasserie.Models.Grossiste", b =>
                {
                    b.Navigation("stocks");
                });
#pragma warning restore 612, 618
        }
    }
}
